#!/usr/bin/env python3
"""
Verifica√ß√£o das mudan√ßas realizadas na remo√ß√£o da op√ß√£o Carregamento R√°pido
"""

import os
import sys

# Adicionar o diret√≥rio raiz ao path do Python
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def check_environment_variable():
    """Verifica se a vari√°vel de ambiente est√° configurada corretamente"""
    print("üîç VERIFICA√á√ÉO DA VARI√ÅVEL DE AMBIENTE")
    print("=" * 40)
    
    # Simular a configura√ß√£o que o Home.py faz
    os.environ["SKIP_LLM_PROCESSING"] = "false"
    
    skip_llm = os.environ.get("SKIP_LLM_PROCESSING", "true")
    print(f"üìä SKIP_LLM_PROCESSING: {skip_llm}")
    
    if skip_llm.lower() == "false":
        print("‚úÖ IA PROCESSAMENTO ATIVADO (correto)")
        return True
    else:
        print("‚ùå IA PROCESSAMENTO DESATIVADO (problema)")
        return False

def check_auto_categorization():
    """Verifica se o auto_categorization respeitar√° a configura√ß√£o"""
    print("\nü§ñ VERIFICA√á√ÉO DO AUTO CATEGORIZATION")
    print("=" * 40)
    
    try:
        from utils.auto_categorization import AutoCategorization
        
        auto_cat = AutoCategorization()
        print(f"üìä Skip AI Processing: {auto_cat.skip_ai_processing}")
        
        if not auto_cat.skip_ai_processing:
            print("‚úÖ AUTO CATEGORIZATION COM IA ATIVADO (correto)")
            return True
        else:
            print("‚ùå AUTO CATEGORIZATION COM IA DESATIVADO (problema)")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro ao verificar auto categorization: {e}")
        return False

def main():
    print("üöÄ VERIFICA√á√ÉO COMPLETA DAS MUDAN√áAS")
    print("=" * 50)
    
    env_ok = check_environment_variable()
    auto_cat_ok = check_auto_categorization()
    
    print(f"\nüìã RESUMO DOS RESULTADOS:")
    print(f"{'‚úÖ' if env_ok else '‚ùå'} Vari√°vel de ambiente configurada")
    print(f"{'‚úÖ' if auto_cat_ok else '‚ùå'} Auto categorization configurado")
    
    if env_ok and auto_cat_ok:
        print("\nüéâ TODAS AS VERIFICA√á√ïES PASSARAM!")
        print("ü§ñ A IA EST√Å CONFIGURADA PARA PROCESSAR TODAS AS TRANSA√á√ïES")
        return True
    else:
        print("\n‚ö†Ô∏è ALGUMAS VERIFICA√á√ïES FALHARAM")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
